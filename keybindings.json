[
    {
        "key": "ctrl+x p",
        "command": "workbench.view.extension.project-manager"
    },
    {
        "key": "ctrl+x n",
        "command": "workbench.action.files.newUntitledFile"
    },
    {
        "key": "ctrl+shift+a",
        "command": "workbench.action.toggleActivityBarVisibility"
    },
    {
        "key": "ctrl+k t",
        "command": "insertDateString.insertDateTime",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+h",
        "command": "-deleteLeft",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "ctrl+k ctrl+h",
        "command": "openInGitHub.openProject"
    },
    {
        "key": "ctrl+k ctrl+g",
        "command": "gitee.openRepoPage"
    },
    {
        "key": "ctrl+i p",
        "command": "type",
        "args": {
            "text": "```{python}\n\n```"
        }
    },
    {
        "key": "ctrl+i r",
        "command": "type",
        "args": {
            "text": "```{r}\n\n```"
        }
    },
    {
        "key": "ctrl+i g",
        "command": "type",
        "args": {
            "text": "```{r imageCodeName, out.width='95%', fig.align='center', fig.pos='H',fig.cap='图名', dev='png', results='markup'}\nknitr::include_graphics('./image_path.png')\n```"
        }
    },
    {
        "key": "ctrl+shift+v",
        "command": "-markdown.showPreview",
        "when": "editorLangId == 'markdown'"
    },
    {
        "key": "ctrl+shift+v",
        "command": "-markdown-preview-enhanced.openPreview",
        "when": "editorLangId == 'markdown'"
    },
    {
        "key": "ctrl+shift+v",
        "command": "-markdown.extension.togglePreview",
        "when": "!terminalFocus"
    },
    {
        "key": "ctrl+k ctrl+b",
        "command": "md-shortcut.toggleBold",
        "when": "editorTextFocus && markdownShortcuts:enabled"
    },
    {
        "key": "ctrl+b",
        "command": "-md-shortcut.toggleBold",
        "when": "editorTextFocus && markdownShortcuts:enabled"
    },
    {
        "key": "ctrl+k ctrl+b",
        "command": "markdown.extension.editing.toggleBold",
        "when": "editorTextFocus && !editorReadonly && editorLangId == 'markdown'"
    },
    {
        "key": "ctrl+b",
        "command": "-markdown.extension.editing.toggleBold",
        "when": "editorTextFocus && !editorReadonly && editorLangId == 'markdown'"
    },
    {
        "key": "ctrl+k v",
        "command": "-markdown.showPreviewToSide",
        "when": "editorLangId == 'markdown'"
    },
    {
        "key": "ctrl+k ctrl+v",
        "command": "markdown-preview-enhanced.openPreviewToTheSide",
        "when": "editorLangId == 'markdown'"
    },
    {
        "key": "ctrl+k v",
        "command": "-markdown-preview-enhanced.openPreviewToTheSide",
        "when": "editorLangId == 'markdown'"
    },
    {
        "key": "ctrl+enter",
        "command": "macros.pythonExecSelectionAndCursorDown",
        "when": "editorTextFocus && editorLangId == 'python'"
    },
    {
        "key": "ctrl+shift+enter",
        "command": "multiCommand.PythonRuninTerminalandStep",
        "when": "editorTextFocus && editorLangId == 'python'"
    },
    {
        "key": "shift+enter",
        "command": "-python.execSelectionInTerminal",
        "when": "editorTextFocus && !findInputFocussed && !python.datascience.ownsSelection && !replaceInputFocussed && editorLangId == 'python'"
    },
    {
        "key": "shift+enter",
        "command": "-jupyter.execSelectionInteractive",
        "when": "editorTextFocus && jupyter.ownsSelection && !findInputFocussed && !notebookEditorFocused && !replaceInputFocussed && editorLangId == 'python'"
    },
    {
        "key": "shift+enter",
        "command": "-jupyter.runcurrentcelladvance",
        "when": "editorTextFocus && jupyter.featureenabled && jupyter.hascodecells && !editorHasSelection"
    },
    {
        "key": "ctrl+k ctrl+e",
        "command": "extension.embraceParenthesis",
        "when": "editorHasSelection && editorTextFocus"
    },
    {
        "key": "ctrl+k ctrl+s",
        "command": "extension.embraceSquareBrackets",
        "when": "editorHasSelection && editorTextFocus"
    },
    {
        "key": "ctrl+k ctrl+l",
        "command": "extension.embraceCurlyBrackets",
        "when": "editorHasSelection && editorTextFocus"
    },
    {
        "key": "ctrl+k ctrl+a",
        "command": "extension.embraceAngleBrackets",
        "when": "editorHasSelection && editorTextFocus"
    },
    {
        "key": "ctrl+k ctrl+q",
        "command": "extension.embraceSingleQuotes",
        "when": "editorHasSelection && editorTextFocus"
    },
    {
        "key": "ctrl+k ctrl+o",
        "command": "extension.embraceDoubleQuotes",
        "when": "editorHasSelection && editorTextFocus"
    },
    {
        "key": "ctrl+enter",
        "command": "multiCommand.sqlRunandStep",
        "when": "editorTextFocus && editorLangId == 'sql' || editorLangId == 'postgres'"
    },
    {
        "key": "alt+enter",
        "command": "multiCommand.postgresRunandStep",
        "when": "editorLangId == 'postgres'"
    },
    {
        "key": "alt+p",
        "command": "workbench.action.terminal.sendSequence",
        "args": {
            "text": "pgsql\r"
        },
        "when": "editorTextFocus && editorLangId == 'sql' || editorLangId == 'postgres'"
    },
    {
        "key": "ctrl+x ctrl+r",
        "command": "workbench.action.terminal.sendSequence",
        "args": {
            "text": "reticulate::repl_python()\r"
        },
        "when": "editorTextFocus && editorLangId == 'rmd'"
    },
    {
        "key": "ctrl+alt+oem_2",
        "command": "editor.action.toggleWordWrap"
    },
    {
        "key": "alt+z",
        "command": "-editor.action.toggleWordWrap"
    },
    {
        "key": "alt+z",
        "command": "cancelRenameInput",
        "when": "editorFocus && renameInputVisible"
    },
    {
        "key": "ctrl+g",
        "command": "-cancelRenameInput",
        "when": "editorFocus && renameInputVisible"
    },
    {
        "key": "alt+z",
        "command": "closeAccessibilityHelp",
        "when": "accessibilityHelpWidgetVisible && editorFocus"
    },
    {
        "key": "ctrl+g",
        "command": "-closeAccessibilityHelp",
        "when": "accessibilityHelpWidgetVisible && editorFocus"
    },
    {
        "key": "alt+z",
        "command": "closeBreakpointWidget",
        "when": "breakpointWidgetVisible && editorFocus"
    },
    {
        "key": "ctrl+g",
        "command": "-closeBreakpointWidget",
        "when": "breakpointWidgetVisible && editorFocus"
    },
    {
        "key": "alt+z",
        "command": "closeFindWidget",
        "when": "editorFocus && findWidgetVisible"
    },
    {
        "key": "ctrl+g",
        "command": "-closeFindWidget",
        "when": "editorFocus && findWidgetVisible"
    },
    {
        "key": "alt+z",
        "command": "closeMarkersNavigation",
        "when": "editorFocus && markersNavigationVisible"
    },
    {
        "key": "ctrl+g",
        "command": "-closeMarkersNavigation",
        "when": "editorFocus && markersNavigationVisible"
    },
    {
        "key": "alt+z",
        "command": "workbench.action.closeQuickOpen",
        "when": "inQuickOpen"
    },
    {
        "key": "ctrl+g",
        "command": "-workbench.action.closeQuickOpen",
        "when": "inQuickOpen"
    },
    {
        "key": "alt+z",
        "command": "workbench.action.closeMessages",
        "when": "globalMessageVisible"
    },
    {
        "key": "ctrl+g",
        "command": "-workbench.action.closeMessages",
        "when": "globalMessageVisible"
    },
    {
        "key": "alt+z",
        "command": "leaveSnippet",
        "when": "editorTextFocus && inSnippetMode"
    },
    {
        "key": "ctrl+g",
        "command": "-leaveSnippet",
        "when": "editorTextFocus && inSnippetMode"
    },
    {
        "key": "alt+z",
        "command": "hideSuggestWidget",
        "when": "editorTextFocus && suggestWidgetVisible"
    },
    {
        "key": "ctrl+g",
        "command": "-hideSuggestWidget",
        "when": "editorTextFocus && suggestWidgetVisible"
    },
    {
        "key": "alt+z",
        "command": "emacs.exitMarkMode",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+g",
        "command": "-emacs.exitMarkMode",
        "when": "editorTextFocus"
    },
    {
        "key": "alt+z",
        "command": "emacs.C-g",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+g",
        "command": "-emacs.C-g",
        "when": "editorTextFocus"
    },
    {
        "key": "alt+z",
        "command": "closeReplaceInFilesWidget",
        "when": "replaceInputBoxFocus && searchViewletVisible"
    },
    {
        "key": "ctrl+g",
        "command": "-closeReplaceInFilesWidget",
        "when": "replaceInputBoxFocus && searchViewletVisible"
    },
    {
        "key": "alt+z",
        "command": "closeReferenceSearchEditor",
        "when": "inReferenceSearchEditor && !config.editor.stablePeek"
    },
    {
        "key": "ctrl+g",
        "command": "-closeReferenceSearchEditor",
        "when": "inReferenceSearchEditor && !config.editor.stablePeek"
    },
    {
        "key": "alt+z",
        "command": "closeReferenceSearch",
        "when": "referenceSearchVisible && !config.editor.stablePeek"
    },
    {
        "key": "ctrl+g",
        "command": "-closeReferenceSearch",
        "when": "referenceSearchVisible && !config.editor.stablePeek"
    },
    {
        "key": "alt+z",
        "command": "closeParameterHints",
        "when": "editorTextFocus && parameterHintsVisible"
    },
    {
        "key": "ctrl+g",
        "command": "-closeParameterHints",
        "when": "editorTextFocus && parameterHintsVisible"
    },
    {
        "key": "ctrl+shift+b",
        "command": "-workbench.action.tasks.build",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+shift+b",
        "command": "workbench.action.toggleSidebarVisibility"
    },
    {
        "key": "ctrl+x ctrl+b",
        "command": "workbench.action.toggleSidebarVisibility"
    },
    {
        "key": "ctrl+x ctrl+e",
        "command": "workbench.view.explorer"
    },
    {
        "key": "ctrl+x 5",
        "command": "workbench.action.closeEditorsInOtherGroups"
    },
    {
        "key": "ctrl+x 1",
        "command": "-workbench.action.closeEditorsInOtherGroups"
    },
    {
        "key": "ctrl+x 1",
        "command": "workbench.action.editorLayoutSingle"
    },
    {
        "key": "ctrl+v",
        "command": "-emacs.cursorPageDown",
        "when": "editorTextFocus && !suggestWidgetVisible"
    },
    {
        "key": "ctrl+v",
        "command": "-closeFindWidget",
        "when": "editorFocus && findWidgetVisible"
    },
    {
        "key": "ctrl+s",
        "command": "-actions.find",
        "when": "!findWidgetVisible"
    },
    {
        "key": "ctrl+s",
        "command": "-actions.find",
        "when": "findWidgetVisible && textInputFocus"
    },
    {
        "key": "ctrl+s",
        "command": "-editor.action.nextMatchFindAction",
        "when": "findWidgetVisible"
    },
    {
        "key": "alt+k",
        "command": "-keybindings.editor.recordSearchKeys",
        "when": "inKeybindings && inKeybindingsSearch"
    },
    {
        "key": "alt+k",
        "command": "emacs.C-k",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "ctrl+k",
        "command": "-emacs.C-k",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "ctrl+oem_2",
        "command": "-emacs.C-/",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "ctrl+oem_2",
        "command": "-closeFindWidget",
        "when": "editorFocus && findWidgetVisible"
    },
    {
        "key": "ctrl+x ctrl+x",
        "command": "editor.action.clipboardCutAction"
    },
    {
        "key": "ctrl+x",
        "command": "-editor.action.clipboardCutAction"
    },
    {
        "key": "ctrl+x ctrl+x",
        "command": "clipboard.cut",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+x",
        "command": "-clipboard.cut",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+x ctrl+x",
        "command": "filesExplorer.cut",
        "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceIsRoot && !inputFocus"
    },
    {
        "key": "ctrl+x",
        "command": "-filesExplorer.cut",
        "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceIsRoot && !inputFocus"
    },
    {
        "key": "ctrl+x e",
        "command": "revealFileInOS"
    },
    {
        "key": "shift+alt+r",
        "command": "-revealFileInOS",
        "when": "!editorFocus"
    },
    {
        "key": "ctrl+x o",
        "command": "-workbench.action.navigateEditorGroups"
    },
    {
        "key": "ctrl+x o",
        "command": "openInExternalApp.open"
    },
    {
        "key": "ctrl+enter",
        "command": "jupyter.runByLineContinue",
        "when": "jupyter.notebookeditor.runByLineInProgress && notebookKernelCount > 0"
    },
    {
        "key": "f10",
        "command": "-jupyter.runByLineContinue",
        "when": "jupyter.notebookeditor.runByLineInProgress && notebookKernelCount > 0"
    },
    {
        "key": "ctrl+enter",
        "command": "jupyter.runByLine",
        "when": "!jupyter.notebookeditor.debuggingInProgress && !jupyter.notebookeditor.runByLineInProgress && notebookKernelCount > 0"
    },
    {
        "key": "f10",
        "command": "-jupyter.runByLine",
        "when": "!jupyter.notebookeditor.debuggingInProgress && !jupyter.notebookeditor.runByLineInProgress && notebookKernelCount > 0"
    },
    {
        "key": "ctrl+enter",
        "command": "jupyter.runcurrentcelladvance",
        "when": "editorTextFocus && isWorkspaceTrusted && jupyter.hascodecells && !editorHasSelection && !notebookEditorFocused"
    },
    {
        "key": "shift+enter",
        "command": "-jupyter.runcurrentcelladvance",
        "when": "editorTextFocus && isWorkspaceTrusted && jupyter.hascodecells && !editorHasSelection && !notebookEditorFocused"
    },
    {
        "key": "ctrl+shift+enter",
        "command": "python.execSelectionInTerminal",
        "when": "editorTextFocus && !findInputFocussed && !jupyter.ownsSelection && !notebookEditorFocused && !replaceInputFocussed && editorLangId == 'python'"
    },
    {
        "key": "shift+enter",
        "command": "-python.execSelectionInTerminal",
        "when": "editorTextFocus && !findInputFocussed && !jupyter.ownsSelection && !notebookEditorFocused && !replaceInputFocussed && editorLangId == 'python'"
    },
    {
        "key": "alt+right",
        "command": "-subwordNavigation.cursorSubwordRight",
        "when": "editorTextFocus"
    },
    {
        "key": "alt+left",
        "command": "-subwordNavigation.cursorSubwordLeft",
        "when": "editorTextFocus"
    },
    {
        "key": "alt+left",
        "command": "subwordNavigation.cursorSubwordLeftSelect",
        "when": "editorTextFocus"
    },
    {
        "key": "shift+alt+left",
        "command": "-subwordNavigation.cursorSubwordLeftSelect",
        "when": "editorTextFocus"
    },
    {
        "key": "alt+right",
        "command": "subwordNavigation.cursorSubwordRightSelect",
        "when": "editorTextFocus"
    },
    {
        "key": "shift+alt+right",
        "command": "-subwordNavigation.cursorSubwordRightSelect",
        "when": "editorTextFocus"
    }
]